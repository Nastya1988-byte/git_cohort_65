SELECT * FROM products WHERE productCode = 'MRK' OR productCode = 'PEC';
SELECT * FROM products WHERE productCode IN ('MRK', 'PEC');
SELECT * FROM products WHERE productCode NOT IN ('MRK', 'PEC');
SELECT * FROM products WHERE quantity BETWEEN 2000 AND 4000;

<---SELECT * FROM products WHERE productCode = NULL; Wrong way
SELECT * FROM products WHERE productCode IS NOT NULL;

SELECT * FROM products ORDER BY quantity;
SELECT * FROM products ORDER BY quantity DESC;
SELECT * FROM products ORDER BY quantity DESC, price;
SELECT * FROM products WHERE productCode IN ('PEN','MRK') ORDER BY quantity;

SELECT name,quantity,price FROM products WHERE productCode
         IN ('PEN','MRK') ORDER BY quantity;
SELECT name,quantity,price FROM products WHERE productCode
         IN ('PEN','MRK') ORDER BY quantity LIMIT 3;
SELECT name,quantity,price FROM products WHERE productCode
         IN ('PEN','MRK') ORDER BY quantity LIMIT 1,3;

SELECT name AS `Product name`, quantity AS Quantity, price AS `Product price`
         FROM products WHERE productCode
         IN ('PEN','MRK') ORDER BY quantity LIMIT 1,3;
SELECT CONCAT(productCode,' --> ', name) AS `Product description`,
         quantity AS Quantity, price AS `Product price`
         FROM products WHERE productCode
         IN ('PEN','MRK') ORDER BY quantity LIMIT 1,3;

SELECT productCode FROM products;
SELECT DISTINCT productCode FROM products;
SELECT DISTINCT productCode, productID FROM products;
--SELECT productID, DISTINCT productCode FROM products;  Wrong way
SELECT DISTINCT productCode, quantity FROM products;
SELECT COUNT(*) FROM products;
SELECT COUNT(DISTINCT productCode) FROM products;
SELECT MAX(price), MIN(price), AVG(price), SUM(quantity) FROM products;
SELECT MAX(price) AS `Max price`, MIN(price) AS `Min price`,
         AVG(price) AS `Average price`, SUM(quantity) AS `Total quantity`
         FROM products;

SELECT MAX(price) AS `Max price`, MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`
         FROM products;

SELECT MAX(price) AS `Max price`, MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products;

INSERT INTO products VALUES (1008, 'PEC', 'Caran d\'Ache', 1, 500);

SELECT MAX(price) AS `Max price`, MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products;

SELECT MAX(price) AS `Max price`, MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products GROUP BY productCode;

SELECT productCode AS Code, MAX(price) AS `Max price`,
         MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products GROUP BY productCode;

SELECT * FROM products GROUP BY productCode;
SELECT productCode FROM products GROUP BY productCode;

SELECT productCode AS Code, MAX(price) AS `Max price`,
         MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products
         WHERE price < 100
         GROUP BY productCode;

SELECT productCode AS Code, MAX(price) AS `Max price`,
         MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products
         WHERE price < 100
         GROUP BY productCode
         WITH ROLLUP;

SELECT productCode AS Code, MAX(price) AS `Max price`,
         MIN(price) AS `Min price`,
         CAST(AVG(price) AS DECIMAL(7,2)) AS `Average price`,
         SUM(quantity) AS `Total quantity`,
         SUM(quantity * price) AS `Total cost`
         FROM products
         WHERE price < 100
         GROUP BY productCode
         HAVING `Total cost` > 10000;




