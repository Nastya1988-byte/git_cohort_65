CREATE DATABASE IF NOT EXISTS cohort_65;
USE cohort_65;
CREATE TABLE IF NOT EXISTS products (
         productID    INT UNSIGNED  NOT NULL AUTO_INCREMENT,
         productCode  CHAR(3)       NOT NULL DEFAULT '',
         name         VARCHAR(30)   NOT NULL DEFAULT '',
         quantity     INT UNSIGNED  NOT NULL DEFAULT 0,
         price        DECIMAL(7,2)  NOT NULL DEFAULT 99999.99,
         PRIMARY KEY  (productID)
       );

INSERT INTO products VALUES (1001, 'PEN', 'Pen Red', 5000, 1.23);
INSERT INTO products VALUES
         (NULL, 'PEN', 'Pen Blue',  8000, 1.25),
         (NULL, 'PEN', 'Pen Black', 2000, 1.25);
INSERT INTO products (productCode, name, quantity, price) VALUES
         ('PEC', 'Pencil 2B', 10000, 0.48),
         ('PEC', 'Pencil 2H', 8000, 0.49);
INSERT INTO products VALUES 
         (NULL, 'MRK', 'Marker Red', 2000, 2.49),
         (NULL, 'MRK', 'Marker Blue', 3000, 2.49);
		 
CREATE TABLE suppliers (
         supplierID  INT UNSIGNED  NOT NULL AUTO_INCREMENT, 
         name        VARCHAR(30)   NOT NULL DEFAULT '', 
         phone       CHAR(8)       NOT NULL DEFAULT '',
         PRIMARY KEY (supplierID)
       );
INSERT INTO suppliers VALUE
          (501, 'ABC Traders', '88881111'), 
          (502, 'XYZ Company', '88882222'), 
          (503, 'QQ Corp', '88883333');
ALTER TABLE products
       ADD COLUMN supplierID INT UNSIGNED NOT NULL;
	   
UPDATE products SET supplierID = 501;
	   
ALTER TABLE products
       ADD FOREIGN KEY (supplierID) REFERENCES suppliers (supplierID);

DESCRIBE products;

UPDATE products SET supplierID = 502 WHERE productCode = 'PEC';
UPDATE products SET supplierID = 503 WHERE productCode = 'MRK';

SHOW CREATE TABLE products \G

SELECT * FROM products, suppliers;
SELECT * FROM products, suppliers 
    WHERE products.supplierID = suppliers.supplierID;
SELECT * FROM products AS p, suppliers AS s
    WHERE p.supplierID = s.supplierID;
SELECT * FROM products p, suppliers s WHERE p.supplierID = s.supplierID;
SELECT p.*, s.name, s.phone FROM products p, suppliers s
    WHERE p.supplierID = s.supplierID AND price < 1.5;
UPDATE products SET supplierID = 520 WHERE productID = 1002; -- Wrong


INSERT INTO products(productID,productCode,name,quantity,price,supplierID)
    VALUES (NULL, 'PEC', 'Caran d\'Ache', 1, 500, 502); 

SELECT products.name, price, suppliers.name 
       FROM products 
          JOIN suppliers ON products.supplierID = suppliers.supplierID
       WHERE price < 0.6;

SELECT products.name, price, suppliers.name 
       FROM suppliers 
          JOIN products ON suppliers.supplierID = products.supplierID
       WHERE price < 0.6;

--Many to Many --
SHOW CREATE TABLE products \G
ALTER TABLE products DROP FOREIGN KEY `products_ibfk_1`;
ALTER TABLE products DROP COLUMN supplierID; 
CREATE TABLE products_suppliers (
         productID   INT UNSIGNED  NOT NULL,
         supplierID  INT UNSIGNED  NOT NULL,
                     -- Same data types as the parent tables
         PRIMARY KEY (productID, supplierID),
                     -- uniqueness
         FOREIGN KEY (productID)  REFERENCES products  (productID),
         FOREIGN KEY (supplierID) REFERENCES suppliers (supplierID)
       );
INSERT INTO products_suppliers VALUES (1001, 501), (1002, 501),
       (1003, 501), (1004, 502), (1001, 503);

SELECT * FROM products_suppliers;
INSERT INTO suppliers VALUES (511, 'MMM Inc', '12345678');
SELECT * FROM products_suppliers, products, suppliers;
SELECT * FROM products_suppliers ps
     JOIN products p ON ps.productID = p.productID
     JOIN suppliers s ON ps.supplierID = s.supplierID;
SELECT p.*, s.* FROM products_suppliers ps
     JOIN products p ON ps.productID = p.productID
     JOIN suppliers s ON ps.supplierID = s.supplierID;

SELECT p.*, ps.supplierID FROM products p 
     LEFT JOIN products_suppliers ps ON p.productID = ps.productID;
	 
SELECT p.*, ps.supplierID FROM products p 
     RIGHT JOIN products_suppliers ps ON p.productID = ps.productID;

SELECT ps.productID,s.* FROM products_suppliers ps 
     RIGHT JOIN suppliers s ON ps.supplierID = s.supplierID;
SELECT ps.productID,s.* FROM suppliers s 
     LEFT JOIN products_suppliers ps ON ps.supplierID = s.supplierID;



